[{"categories":["linux"],"content":"1. 基础环境搭建 1.1 mysql mkdir -p /data/docker/mysql/data docker run --name mysql -v /data/docker/mysql/data:/var/lib/mysql -p 3 -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7.35 ","date":"2021-07-19","permalink":"/posts/docker/env/","series":["docker"],"tags":["linux","docker"],"title":"docker"},{"categories":["tool"],"content":"1. hugo安装配置 1.1 下载hugo  下载 hugo\r,并配置环境变量  运行demo  cd e:workspace/workspace-notes/ hugo new site notes cd notes git submodule add https://github.com/razonyang/hugo-theme-bootstrap themes/hugo-theme-bootstrap mkdir config cp -a themes/hugo-theme-bootstrap/exampleSite/config/* ./config #复制exampleSite\\content\\zh-cn 中的目录到content\\下,然后按照自己的需求修改 1.2 hugo配置 配置文件位置为项目的根目录下的config.toml\nbaseURL = \u0026#34;https://xiangguangsheng.github.io/\u0026#34; languageCode = \u0026#34;zh-cn\u0026#34; title = \u0026#34;james的个人主页\u0026#34; publishDir = \u0026#34;docs\u0026#34; #修改了默认的发布目录 1.3 GitHub pages配置  新建仓库 添加pages配置   下图1中的仓库名称，必须为：xxx.github.io,其中xxx为您的账号名称\n 1.4 访问页面   提交代码到GitHub\n  直接访问 https://xiangguangsheng.github.io/\r  ","date":"2021-07-19","permalink":"/posts/tool/hugo/","series":["tool"],"tags":["hugo","github pages"],"title":"hugo"},{"categories":["linux"],"content":"1.shell常用快捷键 1.1 光标移动 * ctrl + \u0026lt; 移动到前一个单词开头\r* ctrl + \u0026gt; 移动到后一个单词结尾\r* ctrl + A 移动到开头\r* ctrl + E 移动到结尾\r* alt + B 向左移动一个单词\r* alt + F 向右移动一个单词\rctrl + B 向左移动一个字符\rctrl + F 向右移动一个字符\resc + B 向左移动一个单词\resc + F 向右移动一个单词\rctrl + XX 在上次光和当前光标所在字符间跳转\resc + T 交换光标位置前的两个单词\r1.2 删除 * ctrl + K 删除光标后所有字符(剪切)\r* ctrl + U 删除光标前所有字符(剪切)\r* ctrl + W 删除光标前一个单词\rctrl + D 删除光标所在字符(光标右侧)\rctrl + H 删除光标前字符(光标左侧)\r1.3 撤销 * ctrl + _ 撤销操作\r* ctrl + Y 粘贴ctrl+U/K剪切的内容\rctrl + ? 撤消前一次输入\ralt + R 撤消前一次动作\r1.4 替换 * ctrl + T 将光标当前字符与前面一个字符替换\r1.5 历史命令编辑 * ctrl + P 上条输入的命令(相当于上键)\r* ctrl + N 上条历史命(相当于下键)\r* alt + \u0026gt; 上一次执行命令\r* ctrl + R 输入单词搜索历史命令\r1.6 控制命令 * ctrl + L 清除屏幕\rctrl + S 锁住终端，阻止屏幕输出\rctrl + Q 解锁终端，允许屏幕输出\rctrl + C 终止命令\u0026amp;另起一行\rctrl + I 补全功能(类似TAB)\rctrl + O 重复执行命令\ralt + \u0026lt;数字\u0026gt; 操作的次数\rctrl + Z 挂起\r1.7 !命令 * !! 执行上条命令\r* !-n 执行前n条命令\r2.shell 基础 2.1 变量 2.1.1 自定义变量  定义变量：变量名=变量值 （等号前后不能有空格） 引用变量：\\$变量名和\\${变量名},区别：基本相同，${变量名}可以用在字符串模板中 查看变量：echo $变量名，set 显示所有的变量，包括自定义变量和系统变量 取消变量：unset 变量名，作用范围，当前shell中有效  2.1.2 系统变量  定义系统变量：export 变量名=变量值,将自定义变量转为环境变量 引用系统变量：\\$变量名和\\${变量名},区别：基本相同，${变量名}可以用在字符串模板中 查看系统变量：echo $变量名，env显示所有系统变量 取消系统变量：unset 变量名，作用范围，当前shell和子shell中有效  2.1.3 位置参数变量 脚本参数传参$1 $2 $3 $4 $5 $6 $7 $8 $9 ${10} \n2.1.3 预先定义变量  $0脚本名称\n$*所有参数\n$@所有参数\n$#参数个数\n$$当前进程pid\n$!上个后台经常pid\n$?上个命令返回值，0表示成功\n 脚本参数传参$1 $2 $3 $4 $5 $6 $7 $8 $9 ${10} \n#变量赋值，=号前后不能有空格 # 变量的解析，建议用$(),不建议使用` v1=`date +%F` v2=$(date +%F) 2.2 引号的区别    符号 含义 实例     单引号' 所见即所得    双引号\u0026quot; 会解析变量    反引号` 会执行命令同$()     2.3 数字运算   使用$(()),例如$((1+2))\n  使用$[],例如：$[1+2]\n  expr, 例如：expr 1+2\n  let，例如：let num=1+2\n  2.4 $  ${变量名-默认变量值}，当变量没有设置值时（或者使用了unset 变量名 ）,会显示默认变量值；当有变量值（包括空值），不会显示默认值 ${变量名:-默认变量值}，当变量没有设置值时（包括空值 ）,会显示默认变量值；当有变量值（不包括空值），不会显示默认值  2.5 命令执行  命令1 ；命令2 :命令1和命令2都会执行 命令1 \u0026amp;\u0026amp; 命令2 :命令1执行成功才会执行命令2 命令1 || 命令2 :命令1执行失败才会执行命令2  2.6 条件测试  test 条件表达式 [ 条件表达式 ] [[ 条件表达式 ]]   [是个命令，所以，[ 条件表达式 ] 表达式前后都要有空格\n 2.7 文件测试  [ -e dir|file ]: 是否存在dir目录 或者file文件 [ -d dir ]: 是否存在dir目录 [ -f file ]: 是否存在file文件 [ -r file ]: 是否有读权限 [ -w file ]: 是否有写权限 [ -x file ]: 是否有执行权限 [ -L file ]: 是否为链接文件  2.8 数值比较  [ 1 -gt 10 ]: 大于 [ 1 -lt 10 ]: 小于 [ 1 -eq 10 ]: 等于 [ 1 -ne 10 ]: 不等于 [ 1 -ge 10 ]: 大于等于 [ 1 -le 10 ]: 大于等于  ","date":"2021-07-19","permalink":"/posts/linux/shell/","series":["linux"],"tags":["linux","shell"],"title":"shell"},{"categories":["tool"],"content":"1. Github访问慢处理办法 1.1 方法1：GitHub520(推荐)  下载SwitchHosts\r 按照下图配置SwitchHosts  url为：https://raw.hellogithub.com/hosts\n1.2 方法2：手动修改host方式  通过站长工具查询github的ip，http://tool.chinaz.com/dns   修改host文件（C:\\Windows\\System32\\drivers\\etc\\hosts），选择上图中速度最快的ip\n52.192.72.89 github.com\r  github.com的ip是动态变化的，经常需要重复上述步骤修改\n  2. Shadowsocks安装  centos8,使用了新的包管理工具dnf来代替yml，使用podman来代理docker\n 2.1 使用podman安装Shadowsocks的服务端 dnf install -y podman podman pull shadowsocks/shadowsocks-libev podman run -e PASSWORD=Td123456 -e METHOD=aes-256-gcm -p28080:8388 -p28080:8388/udp -d shadowsocks/shadowsocks-libev 2.2 安装Shadowsocks的客户端   下载并安装Shadowsocks客户端：https://github.com/shadowsocks/shadowsocks-windows/releases\n  如下图配置Shadowsocks客户端\n  ","date":"2021-07-19","permalink":"/posts/tool/proxy/","series":["tool"],"tags":["proxy","github","SwitchHosts","Shadowsocks"],"title":"代理"},{"categories":["Shortcode"],"content":"本文展示了如果使用 alert shortcode。\n{{\u0026lt; alert \u0026#34;Message\u0026#34; [type] \u0026gt;}}  The parameter type is optional. Default to info.\n Info {{\u0026lt; alert \u0026#34;Info\u0026#34; \u0026gt;}} Info\r\rSuccess {{\u0026lt; alert \u0026#34;Success\u0026#34; success \u0026gt;}} Success\r\rWarning {{\u0026lt; alert \u0026#34;Warning\u0026#34; warning \u0026gt;}} Warning\r\rDanger {{\u0026lt; alert \u0026#34;Danger\u0026#34; danger \u0026gt;}} Danger\r","date":"2020-10-22","permalink":"/posts/shortcodes/alert/","series":["用户手册"],"tags":["Alert"],"title":"Alert Shortcode"},{"categories":["Shortcode"],"content":"关于哔哩哔哩 shortcode 的详细使用说明。\n使用 {{\u0026lt; bilibili \u0026#34;video id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/bilibili/","series":null,"tags":["哔哩哔哩"],"title":"Bilibili Shortcode"},{"categories":["Shortcode"],"content":"关于 CodePen shortcode 的详细说明。\n使用 {{\u0026lt; codepen \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/codepen/","series":null,"tags":["CodePen"],"title":"CodePen Shortcode"},{"categories":["Shortcode"],"content":"关于 JSFiddle shortcode 的详细说明。\n使用 {{\u0026lt; jsfiddle \u0026#34;user/id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/jsfiddle/","series":null,"tags":["JSFiddle"],"title":"JSFiddle Shortcode"},{"categories":["Shortcode"],"content":"关于 JSRun shortcode 的详细说明。\n使用 {{\u0026lt; jsrun \u0026#34;id\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/jsrun/","series":null,"tags":["JSRun"],"title":"JSRun Shortcode"},{"categories":["Shortcode"],"content":"关于优酷 shortcode 的详细说明。\n使用 {{\u0026lt; youku \u0026#34;XNTQwMTgxMTE2\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/youku/","series":null,"tags":["Youku"],"title":"优酷 Shortcode"},{"categories":["Shortcode"],"content":"关于爱奇艺 shortcode 的详细说明。\n使用 {{\u0026lt; iqiyi \u0026#34;vid\u0026#34; \u0026#34;tvid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/iqiyi/","series":null,"tags":["爱奇艺"],"title":"爱奇艺 Shortcode"},{"categories":["Shortcode"],"content":"关于网易云音乐 Shortcode 的详细使用说明。\n使用 {{\u0026lt; neteasemusic \u0026#34;id\u0026#34; [auto [type]] \u0026gt;}}    Parameter Description     auto The auto controls whether to autoplay. Boolean and optional, default to false.   type The type parameter is optional. Default to 2.    例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/neteasemusic/","series":null,"tags":["网易云音乐"],"title":"网易云音乐 Shortcode"},{"categories":["Shortcode"],"content":"关于腾讯视频 shortcode 的详细说明。\n使用 {{\u0026lt; tencentvideo \u0026#34;vid\u0026#34; \u0026gt;}} 例子 \r","date":"2020-10-22","permalink":"/posts/shortcodes/tencentvideo/","series":null,"tags":["腾讯视频"],"title":"腾讯视频 Shortcode"}]